{"version":3,"sources":["components/card/index.js","data/index.js","features/choices/choicesSlice.js","features/data/dataSlice.js","sections/gender/index.js","sections/entourage/index.js","sections/denizen/index.js","sections/age/index.js","sections/appearance/index.js","sections/nature/index.js","sections/origins/index.js","sections/relationship/index.js","sections/reason/ReasonDialog.js","sections/reason/index.js","sections/perks/index.js","sections/talents/index.js","sections/hobbies/index.js","sections/complications/index.js","components/title/index.js","components/app-bar/index.js","App.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["Card","handleClick","title","description","picked","disabled","Button","onClick","style","backgroundColor","Grid","Typography","map","sec","ind","defaultProps","data","choicesSlice","createSlice","name","initialState","gender","entourageRole","primary","secondary","denizenType","age","perks","classTalents","specialTalents","normalPerks","alteredPerks","appearance","nature","origins","relationship","reason","defaultPerks","hobbies","perksShown","talents","talentsShown","complications","reducers","setGender","state","action","payload","setEntourageRole","setDenizen","setAge","setAppearance","setNature","setOrigins","setRelationship","setReason","setPerksShown","updatePerks","perk","includes","filter","isEqual","setTalentsShown","updateTalents","talent","updateHobbies","hobby","updateComplications","complication","actions","getGender","get","getEntourageRole","getPrimaryEntourageRole","createSelector","role","getSecondaryEntourageRole","getDenizen","getPrimaryDenizenType","denizen","getSecondaryDenizenType","getAgeTitle","ageData","getAppearanceTitle","appearanceData","getNatureTitle","natureData","getOriginsTitle","originsData","getRelationship","getReasonTitle","reasonData","getPerksShown","choices","getPerksTitles","getTalentsShown","getTalentsTitles","getHobbiesTitles","getComplicationsTitles","dataSlice","getSections","getGenderSection","sections","find","getEntourageSection","getEntourageChoices","section","getFilteredEntourageChoices","choice","getDenizenSection","getDenizenChoices","getFilteredDenizenChoices","getAgeSection","getAppearanceSection","getNatureSection","getOriginSection","getRelationshipSection","getReasonSection","getPerksSections","Human","Vampire","Lycanthrope","Stranger","getCurrentPerkSection","perksSections","getTalentsSections","Knight","Headservant","Chamberlain","getCurrentTalentsSection","talentsSections","getHobbiesSection","getComplictionsSection","GenderSection","useSelector","dispatch","useDispatch","container","item","xs","GridList","index","GridListTile","EntourageSection","secondaryRole","DenizenTypeSection","type","secondaryType","AgeSection","AppearanceSection","NatureSection","OriginSection","origin","RelationshipSection","ReasonDialog","open","handleClose","isHybrid","label","values","Versatile","Hybrid","Dialog","onClose","DialogTitle","DialogContent","FormControl","fullWidth","InputLabel","Select","value","input","Input","onChange","event","target","MenuItem","ReasonSection","useState","toggleOpen","perkTypes","PerksSection","currentPerks","spacing","Divider","talentTypes","TalentsSection","currentTalents","variant","HobbiesSection","currentHobbies","ComplicationsSection","currentComplications","Title","padding","justify","useStyles","makeStyles","appBar","top","bottom","ApplicaionBar","classes","theme","useTheme","mdUp","useMediaQuery","breakpoints","up","AppBar","position","className","startIcon","Save","ListAlt","App","Accordion","AccordionSummary","AccordionDetails","counterSlice","increment","decrement","incrementByAmount","configureStore","reducer","counter","counterReducer","dataReducer","choicesReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4f5a4fe1.chunk.js","sourcesContent":["import { Button, Card as MUICard, Typography, Grid } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst Card = ({ handleClick, title, description, picked, disabled }) => {\n  return (\n    <Button\n      onClick={handleClick}\n      disabled={disabled}\n      style={{\n        backgroundColor: picked ? \"green\" : \"white\",\n      }}\n    >\n      <MUICard\n        style={{\n          backgroundColor: \"inherit\",\n        }}\n      >\n        <Grid>\n          <Typography>{title}</Typography>\n          <Typography>\n            {description.map((sec, ind) => {\n              return (\n                <span key={`desc-${ind}`}>\n                  {sec}\n                  <br />\n                  <br />\n                </span>\n              );\n            })}\n          </Typography>\n        </Grid>\n      </MUICard>\n    </Button>\n  );\n};\n\nCard.defaultProps = {\n  picked: false,\n  disabled: false,\n};\n\nexport default Card;\n","import data from \"./data.json\";\nexport default data;\n","import { createSelector } from \"reselect\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { get, includes, isEqual } from \"lodash\";\n\nconst choicesSlice = createSlice({\n  name: \"choices\",\n  initialState: {\n    gender: \"\",\n    entourageRole: {\n      primary: \"\",\n      secondary: \"\",\n    },\n    denizenType: {\n      primary: \"\",\n      secondary: \"\",\n    },\n    age: {\n      title: \"\",\n      description: \"\",\n      perks: {\n        classTalents: 0,\n        specialTalents: 0,\n        normalPerks: 0,\n        alteredPerks: 0,\n      },\n    },\n    appearance: {\n      title: \"\",\n      description: \"\",\n      perks: {\n        classTalents: 0,\n        specialTalents: 0,\n        normalPerks: 0,\n        alteredPerks: 0,\n      },\n    },\n    nature: {\n      title: \"\",\n      description: \"\",\n      perks: {\n        classTalents: 0,\n        specialTalents: 0,\n        normalPerks: 0,\n        alteredPerks: 0,\n      },\n    },\n    origins: {\n      title: \"\",\n      description: \"\",\n      perks: {\n        classTalents: 0,\n        specialTalents: 0,\n        normalPerks: 0,\n        alteredPerks: 0,\n      },\n    },\n    relationship: \"\",\n    reason: {\n      title: \"\",\n      description: \"\",\n      perks: {\n        classTalents: 0,\n        specialTalents: 0,\n        normalPerks: 0,\n        alteredPerks: 0,\n      },\n    },\n    defaultPerks: {\n      classTalents: 1,\n      specialTalents: 0,\n      normalPerks: 1,\n      alteredPerks: 0,\n      hobbies: 1,\n    },\n    perks: [],\n    perksShown: \"Human\",\n    talents: [],\n    talentsShown: \"Knight\",\n    hobbies: [],\n    complications: [],\n  },\n  reducers: {\n    setGender: (state, action) => {\n      state.gender = action.payload;\n    },\n    setEntourageRole: (state, action) => {\n      state.entourageRole = {\n        ...state.entourageRole,\n        ...action.payload,\n      };\n    },\n    setDenizen: (state, action) => {\n      state.denizenType = {\n        ...state.denizenType,\n        ...action.payload,\n      };\n    },\n    setAge: (state, action) => {\n      state.age = action.payload;\n    },\n    setAppearance: (state, action) => {\n      state.appearance = action.payload;\n    },\n    setNature: (state, action) => {\n      state.nature = action.payload;\n    },\n    setOrigins: (state, action) => {\n      state.origins = action.payload;\n    },\n    setRelationship: (state, action) => {\n      state.relationship = action.payload;\n    },\n    setReason: (state, action) => {\n      state.reason = action.payload;\n    },\n    setPerksShown: (state, action) => {\n      state.perksShown = action.payload;\n    },\n    updatePerks: (state, action) => {\n      const perks = state.perks.map((perk) => perk.title);\n      if (includes(perks, action.payload.title)) {\n        state.perks = state.perks.filter((perk) => {\n          return !isEqual(perk, action.payload);\n        });\n      } else {\n        state.perks = [...state.perks, action.payload];\n      }\n    },\n    setTalentsShown: (state, action) => {\n      state.talentsShown = action.payload;\n    },\n    updateTalents: (state, action) => {\n      const talents = state.talents.map((talent) => talent.title);\n      if (includes(talents, action.payload.title)) {\n        state.talents = state.talents.filter((talent) => {\n          return !isEqual(talent, action.payload);\n        });\n      } else {\n        state.talents = [...state.talents, action.payload];\n      }\n    },\n    updateHobbies: (state, action) => {\n      const hobbies = state.hobbies.map((hobby) => hobby.title);\n      if (includes(hobbies, action.payload.title)) {\n        state.hobbies = state.hobbies.filter((hobby) => {\n          return !isEqual(hobby, action.payload);\n        });\n      } else {\n        state.hobbies = [...state.hobbies, action.payload];\n      }\n    },\n    updateComplications: (state, action) => {\n      const complications = state.complications.map(\n        (complication) => complication.title\n      );\n      if (includes(complications, action.payload.title)) {\n        state.complications = state.complications.filter((complication) => {\n          return !isEqual(complication, action.payload);\n        });\n      } else {\n        state.complications = [...state.complications, action.payload];\n      }\n    },\n  },\n});\n\nexport const {\n  setGender,\n  setEntourageRole,\n  setDenizen,\n  setAge,\n  setAppearance,\n  setNature,\n  setOrigins,\n  setRelationship,\n  setReason,\n  setPerksShown,\n  updatePerks,\n  setTalentsShown,\n  updateTalents,\n  updateHobbies,\n  updateComplications,\n} = choicesSlice.actions;\n\nexport const getGender = (state) => {\n  return get(state, \"choices.gender\");\n};\n\nexport const getEntourageRole = (state) => {\n  return get(state, \"choices.entourageRole\");\n};\n\nexport const getPrimaryEntourageRole = createSelector(\n  getEntourageRole,\n  (role) => {\n    return get(role, \"primary\");\n  }\n);\n\nexport const getSecondaryEntourageRole = createSelector(\n  getEntourageRole,\n  (role) => {\n    return get(role, \"secondary\");\n  }\n);\n\nexport const getDenizen = (state) => {\n  return get(state, \"choices.denizenType\");\n};\n\nexport const getPrimaryDenizenType = createSelector(getDenizen, (denizen) => {\n  return get(denizen, \"primary\");\n});\n\nexport const getSecondaryDenizenType = createSelector(getDenizen, (denizen) => {\n  return get(denizen, \"secondary\");\n});\n\nexport const getAge = (state) => {\n  return get(state, \"choices.age\");\n};\n\nexport const getAgeTitle = createSelector(getAge, (ageData) => {\n  return get(ageData, \"title\");\n});\n\nexport const getAppearance = (state) => {\n  return get(state, \"choices.appearance\");\n};\n\nexport const getAppearanceTitle = createSelector(\n  getAppearance,\n  (appearanceData) => {\n    return get(appearanceData, \"title\");\n  }\n);\n\nexport const getNature = (state) => {\n  return get(state, \"choices.nature\");\n};\n\nexport const getNatureTitle = createSelector(getNature, (natureData) => {\n  return get(natureData, \"title\");\n});\n\nexport const getOrigins = (state) => {\n  return get(state, \"choices.origins\");\n};\n\nexport const getOriginsTitle = createSelector(getOrigins, (originsData) => {\n  return get(originsData, \"title\");\n});\n\nexport const getRelationship = (state) => {\n  return get(state, \"choices.relationship\");\n};\n\nexport const getReason = (state) => {\n  return get(state, \"choices.reason\");\n};\n\nexport const getReasonTitle = createSelector(getReason, (reasonData) => {\n  return get(reasonData, \"title\");\n});\n\nexport const getPerksShown = (state) => {\n  return state?.choices?.perksShown;\n};\n\nexport const getPerks = (state) => {\n  return state?.choices?.perks;\n};\n\nexport const getPerksTitles = createSelector(getPerks, (perks) => {\n  return perks.map((perk) => {\n    return perk.title;\n  });\n});\n\nexport const getTalentsShown = (state) => {\n  return state?.choices?.talentsShown;\n};\n\nexport const getTalents = (state) => {\n  return state?.choices?.talents;\n};\n\nexport const getTalentsTitles = createSelector(getTalents, (talents) => {\n  return talents.map((talent) => {\n    return talent.title;\n  });\n});\n\nexport const getHobbies = (state) => {\n  return state?.choices?.hobbies;\n};\n\nexport const getHobbiesTitles = createSelector(getHobbies, (hobbies) => {\n  return hobbies.map((hobby) => {\n    return hobby.title;\n  });\n});\n\nexport const getComplications = (state) => {\n  return state?.choices?.complications;\n};\n\nexport const getComplicationsTitles = createSelector(\n  getComplications,\n  (complications) => {\n    return complications.map((complication) => {\n      return complication.title;\n    });\n  }\n);\n\nexport default choicesSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { find, get } from \"lodash\";\nimport { createSelector } from \"reselect\";\nimport data from \"../../data\";\nimport {\n  getPerksShown,\n  getPrimaryDenizenType,\n  getPrimaryEntourageRole,\n  getSecondaryDenizenType,\n  getSecondaryEntourageRole,\n  getTalentsShown,\n} from \"../choices/choicesSlice\";\n\nconst dataSlice = createSlice({\n  name: \"data\",\n  initialState: data,\n});\n\nexport const getSections = (state) => {\n  return get(state, \"data.sections\");\n};\n\nexport const getGenderSection = createSelector(getSections, (sections) => {\n  return find(sections, { title: \"Gender\" });\n});\n\nexport const getEntourageSection = createSelector(getSections, (sections) => {\n  return find(sections, { title: \"Entourage Role\" });\n});\n\nexport const getEntourageChoices = createSelector(\n  getEntourageSection,\n  (section) => {\n    return get(section, \"choices\");\n  }\n);\n\nexport const getFilteredEntourageChoices = createSelector(\n  [getEntourageChoices, getPrimaryEntourageRole, getSecondaryEntourageRole],\n  (choices, primary, secondary) => {\n    return choices.filter((choice) => {\n      return choice.title !== primary && choice.title !== secondary;\n    });\n  }\n);\n\nexport const getDenizenSection = createSelector(getSections, (sections) => {\n  return find(sections, { title: \"Denizen Type\" });\n});\n\nexport const getDenizenChoices = createSelector(\n  getDenizenSection,\n  (section) => {\n    return get(section, \"choices\");\n  }\n);\n\nexport const getFilteredDenizenChoices = createSelector(\n  [getDenizenChoices, getPrimaryDenizenType, getSecondaryDenizenType],\n  (choices, primary, secondary) => {\n    return choices.filter((choice) => {\n      return choice.title !== primary && choice.title !== secondary;\n    });\n  }\n);\n\nexport const getAgeSection = createSelector(getSections, (sections) => {\n  return find(sections, { title: \"Your Lady's Age\" });\n});\n\nexport const getAppearanceSection = createSelector(getSections, (sections) => {\n  return find(sections, { title: \"Your Lady's Appearance\" });\n});\n\nexport const getNatureSection = createSelector(getSections, (sections) => {\n  return find(sections, { title: \"Your Lady's Nature\" });\n});\n\nexport const getOriginSection = createSelector(getSections, (sections) => {\n  return find(sections, { title: \"Your Lady's Origins\" });\n});\n\nexport const getRelationshipSection = createSelector(\n  getSections,\n  (sections) => {\n    return find(sections, { title: \"Your Relationship With Your Lady\" });\n  }\n);\n\nexport const getReasonSection = createSelector(getSections, (sections) => {\n  return find(sections, { title: \"What makes you special\" });\n});\n\nexport const getPerksSections = createSelector(getSections, (sections) => {\n  return {\n    Human: find(sections, { title: \"Human Perks\" }),\n    Vampire: find(sections, { title: \"Vampire Perks\" }),\n    Lycanthrope: find(sections, { title: \"Lycanthrope Perks\" }),\n    Stranger: find(sections, { title: \"Stranger Perks\" }),\n  };\n});\n\nexport const getCurrentPerkSection = createSelector(\n  getPerksSections,\n  getPerksShown,\n  (perksSections, perksShown) => {\n    return perksSections[perksShown];\n  }\n);\n\nexport const getTalentsSections = createSelector(getSections, (sections) => {\n  return {\n    Knight: find(sections, { title: \"Knight Talents\" }),\n    Headservant: find(sections, { title: \"Headservant Talents\" }),\n    Chamberlain: find(sections, { title: \"Chamberlain Talents\" }),\n    \"Hidden Blade\": find(sections, { title: \"Hidden Blade Talents\" }),\n  };\n});\n\nexport const getCurrentTalentsSection = createSelector(\n  getTalentsSections,\n  getTalentsShown,\n  (talentsSections, talentsShown) => {\n    return talentsSections[talentsShown];\n  }\n);\n\nexport const getHobbiesSection = createSelector(getSections, (sections) => {\n  return find(sections, { title: \"Your Lady's Hobbies\" });\n});\n\nexport const getComplictionsSection = createSelector(\n  getSections,\n  (sections) => {\n    return find(sections, { title: \"Complications\" });\n  }\n);\n\nexport default dataSlice.reducer;\n","import { Grid, GridList, GridListTile, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Card from \"../../components/card\";\nimport { getGenderSection } from \"../../features/data/dataSlice\";\nimport { setGender, getGender } from \"../../features/choices/choicesSlice\";\n\nconst GenderSection = () => {\n  const { title, description, choices } = useSelector(getGenderSection);\n  const gender = useSelector(getGender);\n  const dispatch = useDispatch();\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Typography>{title}</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Typography>\n          {description.map((sec, ind) => {\n            return (\n              <span key={`desc-${ind}`}>\n                {sec}\n                <br />\n                <br />\n              </span>\n            );\n          })}\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container>\n          <GridList>\n            {choices.map((choice, index) => {\n              const { title } = choice;\n              return (\n                <GridListTile key={`grid-list-tile-${index}`}>\n                  <Card\n                    handleClick={() => dispatch(setGender(title))}\n                    picked={title === gender}\n                    {...choice}\n                  />\n                </GridListTile>\n              );\n            })}\n          </GridList>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default GenderSection;\n","import { Grid, GridList, GridListTile, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Card from \"../../components/card\";\nimport { getEntourageSection } from \"../../features/data/dataSlice\";\nimport {\n  setEntourageRole,\n  getPrimaryEntourageRole,\n  getSecondaryEntourageRole,\n} from \"../../features/choices/choicesSlice\";\n\nconst EntourageSection = () => {\n  const { title, description, choices } = useSelector(getEntourageSection);\n  const role = useSelector(getPrimaryEntourageRole);\n  const secondaryRole = useSelector(getSecondaryEntourageRole);\n  const dispatch = useDispatch();\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Typography>{title}</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Typography>\n          {description.map((sec, ind) => {\n            return (\n              <span key={`desc-${ind}`}>\n                {sec}\n                <br />\n                <br />\n              </span>\n            );\n          })}\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container>\n          <GridList>\n            {choices.map((choice, index) => {\n              const { title } = choice;\n              return (\n                <GridListTile key={`grid-list-tile-${index}`}>\n                  <Card\n                    handleClick={() =>\n                      dispatch(setEntourageRole({ primary: title }))\n                    }\n                    picked={title === role || title === secondaryRole}\n                    disabled={title === secondaryRole}\n                    {...choice}\n                  />\n                </GridListTile>\n              );\n            })}\n          </GridList>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default EntourageSection;\n","import { Grid, GridList, GridListTile, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Card from \"../../components/card\";\nimport { getDenizenSection } from \"../../features/data/dataSlice\";\nimport {\n  setDenizen,\n  getPrimaryDenizenType,\n  getSecondaryDenizenType,\n} from \"../../features/choices/choicesSlice\";\n\nconst DenizenTypeSection = () => {\n  const { title, description, choices } = useSelector(getDenizenSection);\n  const type = useSelector(getPrimaryDenizenType);\n  const secondaryType = useSelector(getSecondaryDenizenType);\n  const dispatch = useDispatch();\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Typography>{title}</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Typography>\n          {description.map((sec, ind) => {\n            return (\n              <span key={`desc-${ind}`}>\n                {sec}\n                <br />\n                <br />\n              </span>\n            );\n          })}\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container>\n          <GridList>\n            {choices.map((choice, index) => {\n              const { title } = choice;\n              return (\n                <GridListTile key={`grid-list-tile-${index}`}>\n                  <Card\n                    handleClick={() => dispatch(setDenizen({ primary: title }))}\n                    picked={title === type || title === secondaryType}\n                    disabled={title === secondaryType}\n                    {...choice}\n                  />\n                </GridListTile>\n              );\n            })}\n          </GridList>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default DenizenTypeSection;\n","import { Grid, GridList, GridListTile, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Card from \"../../components/card\";\nimport { getAgeSection } from \"../../features/data/dataSlice\";\nimport { setAge, getAgeTitle } from \"../../features/choices/choicesSlice\";\n\nconst AgeSection = () => {\n  const { title, description, choices } = useSelector(getAgeSection);\n  const age = useSelector(getAgeTitle);\n  const dispatch = useDispatch();\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Typography>{title}</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Typography>\n          {description.map((sec, ind) => {\n            return (\n              <span key={`desc-${ind}`}>\n                {sec}\n                <br />\n                <br />\n              </span>\n            );\n          })}\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container>\n          <GridList>\n            {choices.map((choice, index) => {\n              return (\n                <GridListTile key={`grid-list-tile-${index}`}>\n                  <Card\n                    handleClick={() => dispatch(setAge(choice))}\n                    picked={choice.title === age}\n                    {...choice}\n                  />\n                </GridListTile>\n              );\n            })}\n          </GridList>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default AgeSection;\n","import { Grid, GridList, GridListTile, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Card from \"../../components/card\";\nimport { getAppearanceSection } from \"../../features/data/dataSlice\";\nimport {\n  setAppearance,\n  getAppearanceTitle,\n} from \"../../features/choices/choicesSlice\";\n\nconst AppearanceSection = () => {\n  const { title, description, choices } = useSelector(getAppearanceSection);\n  const appearance = useSelector(getAppearanceTitle);\n  const dispatch = useDispatch();\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Typography>{title}</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Typography>\n          {description.map((sec, ind) => {\n            return (\n              <span key={`desc-${ind}`}>\n                {sec}\n                <br />\n                <br />\n              </span>\n            );\n          })}\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container>\n          <GridList>\n            {choices.map((choice, index) => {\n              return (\n                <GridListTile key={`grid-list-tile-${index}`}>\n                  <Card\n                    handleClick={() => dispatch(setAppearance(choice))}\n                    picked={choice.title === appearance}\n                    {...choice}\n                  />\n                </GridListTile>\n              );\n            })}\n          </GridList>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default AppearanceSection;\n","import { Grid, GridList, GridListTile, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Card from \"../../components/card\";\nimport { getNatureSection } from \"../../features/data/dataSlice\";\nimport { setNature, getNatureTitle } from \"../../features/choices/choicesSlice\";\n\nconst NatureSection = () => {\n  const { title, description, choices } = useSelector(getNatureSection);\n  const nature = useSelector(getNatureTitle);\n  const dispatch = useDispatch();\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Typography>{title}</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Typography>\n          {description.map((sec, ind) => {\n            return (\n              <span key={`desc-${ind}`}>\n                {sec}\n                <br />\n                <br />\n              </span>\n            );\n          })}\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container>\n          <GridList>\n            {choices.map((choice, index) => {\n              return (\n                <GridListTile key={`grid-list-tile-${index}`}>\n                  <Card\n                    handleClick={() => dispatch(setNature(choice))}\n                    picked={choice.title === nature}\n                    {...choice}\n                  />\n                </GridListTile>\n              );\n            })}\n          </GridList>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default NatureSection;\n","import { Grid, GridList, GridListTile, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Card from \"../../components/card\";\nimport { getOriginSection } from \"../../features/data/dataSlice\";\nimport {\n  setOrigins,\n  getOriginsTitle,\n} from \"../../features/choices/choicesSlice\";\n\nconst OriginSection = () => {\n  const { title, description, choices } = useSelector(getOriginSection);\n  const origin = useSelector(getOriginsTitle);\n  const dispatch = useDispatch();\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Typography>{title}</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Typography>\n          {description.map((sec, ind) => {\n            return (\n              <span key={`desc-${ind}`}>\n                {sec}\n                <br />\n                <br />\n              </span>\n            );\n          })}\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container>\n          <GridList>\n            {choices.map((choice, index) => {\n              return (\n                <GridListTile key={`grid-list-tile-${index}`}>\n                  <Card\n                    handleClick={() => dispatch(setOrigins(choice))}\n                    picked={choice.title === origin}\n                    {...choice}\n                  />\n                </GridListTile>\n              );\n            })}\n          </GridList>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default OriginSection;\n","import { Grid, GridList, GridListTile, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Card from \"../../components/card\";\nimport { getRelationshipSection } from \"../../features/data/dataSlice\";\nimport {\n  setRelationship,\n  getRelationship,\n} from \"../../features/choices/choicesSlice\";\n\nconst RelationshipSection = () => {\n  const { title, description, choices } = useSelector(getRelationshipSection);\n  const relationship = useSelector(getRelationship);\n  const dispatch = useDispatch();\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Typography>{title}</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Typography>\n          {description.map((sec, ind) => {\n            return (\n              <span key={`desc-${ind}`}>\n                {sec}\n                <br />\n                <br />\n              </span>\n            );\n          })}\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container>\n          <GridList>\n            {choices.map((choice, index) => {\n              return (\n                <GridListTile key={`grid-list-tile-${index}`}>\n                  <Card\n                    handleClick={() => dispatch(setRelationship(choice.title))}\n                    picked={choice.title === relationship}\n                    {...choice}\n                  />\n                </GridListTile>\n              );\n            })}\n          </GridList>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default RelationshipSection;\n","import {\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  Input,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getSecondaryDenizenType,\n  getSecondaryEntourageRole,\n  setDenizen,\n  setEntourageRole,\n} from \"../../features/choices/choicesSlice\";\nimport {\n  getFilteredDenizenChoices,\n  getFilteredEntourageChoices,\n} from \"../../features/data/dataSlice\";\n\nconst ReasonDialog = ({ type, open, handleClose }) => {\n  const dispatch = useDispatch();\n  const isHybrid = type === \"Hybrid\";\n  const title = isHybrid\n    ? \"Choose Your Extra Species\"\n    : \"Choose Your Extra Class\";\n  const label = isHybrid ? \"Extra Species\" : \"Extra Class\";\n  const values = {\n    Versatile: useSelector(getSecondaryEntourageRole),\n    Hybrid: useSelector(getSecondaryDenizenType),\n  };\n  const choices = {\n    Versatile: useSelector(getFilteredEntourageChoices),\n    Hybrid: useSelector(getFilteredDenizenChoices),\n  };\n  const handleChange = (event) => {\n    if (isHybrid) {\n      dispatch(setDenizen({ secondary: event.target.value }));\n    } else {\n      dispatch(setEntourageRole({ secondary: event.target.value }));\n    }\n    handleClose(!open);\n    return null;\n  };\n\n  return (\n    <Dialog open={open} onClose={() => handleClose(!open)}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        <FormControl fullWidth>\n          <InputLabel>{label}</InputLabel>\n          <Select\n            value={values[type]}\n            input={<Input />}\n            onChange={handleChange}\n          >\n            <MenuItem value=\"\">--CLEAR--</MenuItem>\n            {choices[type]?.map((choice, index) => {\n              return (\n                <MenuItem key={`menu-iten-${index}`} value={choice.title}>\n                  {choice.title}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </FormControl>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default ReasonDialog;\n","import { Grid, GridList, GridListTile, Typography } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Card from \"../../components/card\";\nimport { getReasonSection } from \"../../features/data/dataSlice\";\nimport {\n  setEntourageRole,\n  setDenizen,\n  setReason,\n  getReasonTitle,\n} from \"../../features/choices/choicesSlice\";\nimport ReasonDialog from \"./ReasonDialog\";\n\nconst ReasonSection = () => {\n  const { title, description, choices } = useSelector(getReasonSection);\n  const reason = useSelector(getReasonTitle);\n  const dispatch = useDispatch();\n  const [open, toggleOpen] = useState(false);\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Typography>{title}</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Typography>\n          {description.map((sec, ind) => {\n            return (\n              <span key={`desc-${ind}`}>\n                {sec}\n                <br />\n                <br />\n              </span>\n            );\n          })}\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container>\n          <GridList>\n            {choices.map((choice, index) => {\n              return (\n                <GridListTile key={`grid-list-tile-${index}`}>\n                  <Card\n                    handleClick={() => {\n                      dispatch(setReason(choice));\n                      if (choice.title === \"Hybrid\") {\n                        dispatch(setEntourageRole({ secondary: \"\" }));\n                        toggleOpen(!open);\n                      } else if (choice.title === \"Versatile\") {\n                        dispatch(setDenizen({ secondary: \"\" }));\n                        toggleOpen(!open);\n                      } else {\n                        dispatch(setDenizen({ secondary: \"\" }));\n                        dispatch(setEntourageRole({ secondary: \"\" }));\n                      }\n                    }}\n                    picked={choice.title === reason}\n                    {...choice}\n                  />\n                </GridListTile>\n              );\n            })}\n          </GridList>\n        </Grid>\n      </Grid>\n      <ReasonDialog open={open} type={reason} handleClose={toggleOpen} />\n    </Grid>\n  );\n};\n\nexport default ReasonSection;\n","import {\n  Button,\n  Divider,\n  Grid,\n  Typography,\n  GridList,\n  GridListTile,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getPerksShown,\n  getPerksTitles,\n  setPerksShown,\n  updatePerks,\n} from \"../../features/choices/choicesSlice\";\nimport { getCurrentPerkSection } from \"../../features/data/dataSlice\";\nimport Card from \"../../components/card\";\n\nconst perkTypes = [\"Human\", \"Vampire\", \"Lycanthrope\", \"Stranger\"];\n\nconst PerksSection = () => {\n  const perksShown = useSelector(getPerksShown);\n  const section = useSelector(getCurrentPerkSection);\n  const currentPerks = useSelector(getPerksTitles);\n  const dispatch = useDispatch();\n\n  return (\n    <Grid container spacing={4}>\n      <Grid item xs={12}>\n        <Typography>Perks</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Typography>\n          This is the perk section, Normal perks can only be spent in the\n          section matching your choice of species, while altered perks can only\n          be spent in sections that do not match that choice. Both types of\n          perks can be spent in the section selected with Hybrid.\n          <br />\n          <br />\n          Gain a normal perk to spend in this section.\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container>\n          {perkTypes.map((perk, index) => {\n            return (\n              <Grid item xs={6} key={`Grid-PerksButtons-${index}`}>\n                <Button\n                  onClick={() => dispatch(setPerksShown(perk))}\n                  fullWidth\n                  style={{\n                    backgroundColor: perksShown === perk ? \"green\" : \"white\",\n                  }}\n                >\n                  {perk}\n                </Button>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Grid>\n      <Divider />\n      <Grid item xs={12}>\n        <Typography>{section.title}</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container>\n          <GridList>\n            {section.choices.map((choice, index) => {\n              const { title } = choice;\n              return (\n                <GridListTile key={`grid-list-tile-${index}`}>\n                  <Card\n                    handleClick={() =>\n                      dispatch(\n                        updatePerks({\n                          ...choice,\n                          type: perksShown,\n                        })\n                      )\n                    }\n                    picked={currentPerks.includes(title)}\n                    {...choice}\n                  />\n                </GridListTile>\n              );\n            })}\n          </GridList>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default PerksSection;\n","import {\n  Button,\n  Divider,\n  Grid,\n  Typography,\n  GridList,\n  GridListTile,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Card from \"../../components/card\";\nimport {\n  getTalentsShown,\n  getTalentsTitles,\n  setTalentsShown,\n  updateTalents,\n} from \"../../features/choices/choicesSlice\";\nimport { getCurrentTalentsSection } from \"../../features/data/dataSlice\";\n\nconst talentTypes = [\"Knight\", \"Headservant\", \"Chamberlain\", \"Hidden Blade\"];\n\nconst TalentsSection = () => {\n  const dispatch = useDispatch();\n  const talentsShown = useSelector(getTalentsShown);\n  const section = useSelector(getCurrentTalentsSection);\n  const currentTalents = useSelector(getTalentsTitles);\n\n  return (\n    <Grid container spacing={4}>\n      <Grid item xs={12}>\n        <Typography>Talents</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Typography>\n          This is the talent section. Class talents can only be spent in the\n          section matching your choice of class, while special talents can only\n          be spent in sections that do not match that choice. Both types of\n          talents can be spent in the section selected with Versatile.\n          <br />\n          <br />\n          Gain a class talent to expend on this section.\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container spacing={4}>\n          {talentTypes.map((talent, index) => {\n            return (\n              <Grid item xs={6} key={`Grid-PerksButtons-${index}`}>\n                <Button\n                  onClick={() => dispatch(setTalentsShown(talent))}\n                  fullWidth\n                  style={{\n                    backgroundColor:\n                      talentsShown === talent ? \"green\" : \"white\",\n                  }}\n                  variant=\"outlined\"\n                >\n                  {talent}\n                </Button>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Grid>\n      <Divider />\n      <Grid item xs={12}>\n        <Typography>{section.title}</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container>\n          <GridList>\n            {section.choices.map((choice, index) => {\n              const { title } = choice;\n              return (\n                <GridListTile key={`grid-list-tile-${index}`}>\n                  <Card\n                    handleClick={() =>\n                      dispatch(\n                        updateTalents({\n                          ...choice,\n                          type: talentsShown,\n                        })\n                      )\n                    }\n                    picked={currentTalents.includes(title)}\n                    {...choice}\n                  />\n                </GridListTile>\n              );\n            })}\n          </GridList>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TalentsSection;\n","import {\n  Divider,\n  Grid,\n  Typography,\n  GridList,\n  GridListTile,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Card from \"../../components/card\";\nimport {\n  updateHobbies,\n  getHobbiesTitles,\n} from \"../../features/choices/choicesSlice\";\nimport { getHobbiesSection } from \"../../features/data/dataSlice\";\n\nconst HobbiesSection = () => {\n  const dispatch = useDispatch();\n  const { title, description, choices } = useSelector(getHobbiesSection);\n  const currentHobbies = useSelector(getHobbiesTitles);\n\n  return (\n    <Grid container spacing={4}>\n      <Grid item xs={12}>\n        <Typography>{title}</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Typography>\n          {description.map((sec, ind) => {\n            return (\n              <span key={`desc-${ind}`}>\n                {sec}\n                <br />\n                <br />\n              </span>\n            );\n          })}\n        </Typography>\n      </Grid>\n      <Divider />\n      <Grid item xs={12}>\n        <Grid container>\n          <GridList>\n            {choices.map((choice, index) => {\n              return (\n                <GridListTile key={`grid-list-tile-${index}`}>\n                  <Card\n                    handleClick={() => dispatch(updateHobbies(choice))}\n                    picked={currentHobbies.includes(choice.title)}\n                    {...choice}\n                  />\n                </GridListTile>\n              );\n            })}\n          </GridList>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default HobbiesSection;\n","import {\n  Divider,\n  Grid,\n  Typography,\n  GridList,\n  GridListTile,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Card from \"../../components/card\";\nimport {\n  getComplicationsTitles,\n  updateComplications,\n} from \"../../features/choices/choicesSlice\";\nimport { getComplictionsSection } from \"../../features/data/dataSlice\";\n\nconst ComplicationsSection = () => {\n  const dispatch = useDispatch();\n  const { title, description, choices } = useSelector(getComplictionsSection);\n  const currentComplications = useSelector(getComplicationsTitles);\n\n  return (\n    <Grid container spacing={4}>\n      <Grid item xs={12}>\n        <Typography>{title}</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Typography>\n          {description.map((sec, ind) => {\n            return (\n              <span key={`desc-${ind}`}>\n                {sec}\n                <br />\n                <br />\n              </span>\n            );\n          })}\n        </Typography>\n      </Grid>\n      <Divider />\n      <Grid item xs={12}>\n        <Grid container>\n          <GridList>\n            {choices.map((choice, index) => {\n              return (\n                <GridListTile key={`grid-list-tile-${index}`}>\n                  <Card\n                    handleClick={() => dispatch(updateComplications(choice))}\n                    picked={currentComplications.includes(choice.title)}\n                    {...choice}\n                  />\n                </GridListTile>\n              );\n            })}\n          </GridList>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ComplicationsSection;\n","import { Grid, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst Title = () => {\n  return (\n    <Grid container style={{ padding: \"16px 0\" }} justify=\"center\">\n      <Typography variant=\"h2\">The Lady's Very Own Interactive CYOA</Typography>\n    </Grid>\n  );\n};\n\nexport default Title;\n","import {\n  AppBar,\n  Button,\n  Grid,\n  IconButton,\n  makeStyles,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from \"@material-ui/core\";\nimport { ConfirmationNumber, ListAlt, Save } from \"@material-ui/icons\";\nimport React from \"react\";\n\nconst useStyles = makeStyles({\n  appBar: {\n    top: \"auto\",\n    bottom: 0,\n    padding: \"4px 0\",\n  },\n});\n\nconst ApplicaionBar = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const mdUp = useMediaQuery(theme.breakpoints.up(\"sm\"));\n\n  return (\n    <AppBar position=\"sticky\" className={classes.appBar}>\n      <Grid container justify=\"space-around\">\n        <Button startIcon={<Save />}>{mdUp ? \"Save\" : null}</Button>\n        <Button startIcon={<ListAlt />}>{mdUp ? \"Choices\" : null}</Button>\n      </Grid>\n    </AppBar>\n  );\n};\n\nexport default ApplicaionBar;\n","import React from \"react\";\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n} from \"@material-ui/core\";\nimport \"./App.css\";\nimport GenderSection from \"./sections/gender\";\nimport EntourageSection from \"./sections/entourage\";\nimport DenizenTypeSection from \"./sections/denizen\";\nimport AgeSection from \"./sections/age\";\nimport AppearanceSection from \"./sections/appearance\";\nimport NatureSection from \"./sections/nature\";\nimport OriginSection from \"./sections/origins\";\nimport RelationshipSection from \"./sections/relationship\";\nimport ReasonSection from \"./sections/reason\";\nimport PerksSection from \"./sections/perks\";\nimport TalentsSection from \"./sections/talents\";\nimport HobbiesSection from \"./sections/hobbies\";\nimport ComplicationsSection from \"./sections/complications\";\nimport Title from \"./components/title\";\nimport ApplicaionBar from \"./components/app-bar\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Title />\n      <div style={{ padding: \"16px\" }}>\n        <Accordion>\n          <AccordionSummary>\n            <Typography>Gender</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <GenderSection />\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary>\n            <Typography>Entourage</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <EntourageSection />\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary>\n            <Typography>Denizen Type</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <DenizenTypeSection />\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary>\n            <Typography>Your Lady's Age</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <AgeSection />\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary>\n            <Typography>Your Lady's Appearance</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <AppearanceSection />\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary>\n            <Typography>Your Lady's Nature</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <NatureSection />\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary>\n            <Typography>Your Lady's Origins</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <OriginSection />\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary>\n            <Typography>Your Relationship With Your Lady</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <RelationshipSection />\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary>\n            <Typography>What Makes You Special</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <ReasonSection />\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary>\n            <Typography>Perks</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <PerksSection />\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary>\n            <Typography>Talents</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <TalentsSection />\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary>\n            <Typography>Hobbies</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <HobbiesSection />\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary>\n            <Typography>Complications</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <ComplicationsSection />\n          </AccordionDetails>\n        </Accordion>\n      </div>\n      <ApplicaionBar />\n    </div>\n  );\n}\n\nexport default App;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const counterSlice = createSlice({\n  name: \"counter\",\n  initialState: {\n    value: 0,\n  },\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\nexport const incrementAsync = (amount) => (dispatch) => {\n  setTimeout(() => {\n    dispatch(incrementByAmount(amount));\n  }, 1000);\n};\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\nexport default counterSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from \"../features/counter/counterSlice\";\nimport dataReducer from \"../features/data/dataSlice\";\nimport choicesReducer from \"../features/choices/choicesSlice\";\n\nexport default configureStore({\n  reducer: {\n    counter: counterReducer,\n    data: dataReducer,\n    choices: choicesReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}